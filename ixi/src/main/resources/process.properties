# This file contains properties which are applicable to Stringflow
# server process which will load these properties. If the server is
# running in clustered environment, these proerties must be set 
# accordingly.

# Stringflow server process may run in two modes: Cluster and Single 
# instance. sf.mode indicates if this process is running in cluster 
# mode.
sf.mode=single

# Each stringflow server instance makes use of Session Manager to 
# store user sessions. UserSession keeps all the Local Session 
# instances which internal keeps stream related information along 
# with TCP socket which user is connected to. The type of the store 
# indicates if the server process will make use of an internal
# session store (within the JVM memory space) or an external session
# store. When stringflow is running in cluster mode, session store
# type MUST be external. sf.session-manager.store property indicates
# the Session Store implementation which will be used by Session
# Manager to store user sessions.
sf.session-manager.store.type=internal
sf.session-manager.store=abs.ixi.server.session.DefaultSessionStore

# Barring few exceptions, a Message packet is rarely processed within
# server process; a Message packet from a user is simply delivered to
# another user (destination). By default each packet is handed-over 
# to Packet Router for routing. However if there is a single instance
# of Stringflow server running and messages packets are subjected to
# no other processing, IOController can be shot circuited to route
# Message packets to destination TCP sockets. This results in 
# performance improvements.      
sf.ioc.short-circuit=false

# Stringflow cluster is a equal-responsibility-node cluster
# which means that all the nodes within cluster are 
# identical. In the cluster, each node is aware of all the 
# other nodes in the cluster. Below property specifies a
# comma separated list of ip addresses of all the nodes in
# the cluster.
sf.cluster.nodes=

# Disable loading of core server components using below filters. Load
# filter is a comma seperated list of fully qualified core server 
# component class names. 
sf.core.component.load.filter=null

# Connection managers are responsible for accepting incoming 
# connections and setting up network sockets; below ports are used to
# listen for incoming connections.
sf.net.connection.manager.xmpp.active=true
sf.net.connection.manager.xmpp.port=5222
sf.net.connection.manager.bosh.active=false
sf.net.connection.manager.bosh.port=5240
sf.net.connection.manager.mime.active=false
sf.net.connection.manager.mime.port=5234

# Server control port
sf.manage.control.port=9001

# NetwrokTransport is a core server component which is responsible 
# for managing network operations within server. Below are 
# configurations for NetwrokTransport threadpool which is used by 
# event dispatcher threadpool configurations
sf.net.transport.threadpool.core.size=3
sf.net.transport.threadpool.max.size=5
sf.net.transport.threadpool.keep.alive.minutes=5

# Enable/Disable tls on trnsport
sf.net.transport.tls=false

# IOController is a core server component which works as an adaptor
# between netwrok layer and application layer. Below are 
# configurations for IOController threadpool configurations.
# Keep-alive time is in minutes.
sf.io.controller.threadpool.core.size=3
sf.io.controller.threadpool.max.size=7
sf.io.controller.threadpool.keep.alive.minutes=5

# TaskRunner uses a seperate threadool for scheduled tasks in server.
# The threadpool is instantiated with below configurations.
sf.task.runner.threadpool.core.size=1
sf.task.runner.threadpool.max.size=2
sf.task.runner.threadpool.keep.alive.minutes=5

# TaskRunner uses a seperate threadool for scheduled tasks in server.
# The threadpool is instantiated with below configurations.
sf.task.runner.schedule.threadpool.core.size=1
sf.task.runner.schedule.threadpool.max.size=2
sf.task.runner.schedule.threadpool.keep.alive.minutes=5

# Swift Parser Confugurations.
# Maximum number of attributes allowed for an element.
# Max size (in chars) of an attribute for an element
# Max size (in chars) of an element
# Max size of an attribute name (in chars)
# MAx size for attribute value (in chars)
# Max CDATA size (in chars)
parser.swift.max.attr.count.limit = 50
parser.swift.max.attr.number.size = 128
parser.swift.max.element.name.size = 128
parser.swift.max.attr.name.size = 128
parser.swift.max.attr.value.size = 128
parser.swift.max.cdata.size = 5120

# Session watchdog is a daemon process which cleans-up inactive 
# sessions.The daemon runs periodicaly and scans session cache. Below
# property specifies time in MINUTES for deamon to execute. A too 
# high value will lead to inactive sessions in cache and associated 
# user may be seen as online. However a low value will result in 
# session watchdog eating up cpu.
sf.session.watchdog.frequency=5

# Cached Buffer factory configurations
sf.cached.bufferfactory.buffer.size=4096
sf.cached.bufferfactory.capacity=120000
sf.cached.bufferfactory.buffer.type=DIRECT

# SASL Server factory
sf.sasl.serverfactory=abs.ixi.server.sys.secure.sasl.SaslMechanismFactory
